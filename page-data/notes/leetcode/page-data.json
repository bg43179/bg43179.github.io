{"componentChunkName":"component---src-templates-note-template-js","path":"/notes/leetcode","result":{"data":{"markdownRemark":{"id":"05d1ddfe-3056-5af4-a056-c95801a81787","html":"<h3 id=\"qucik-sort-reference\" style=\"position:relative;\"><a href=\"#qucik-sort-reference\" aria-label=\"qucik sort reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Qucik Sort <a href=\"https://github.com/michaelchen110/Learning-Notes/blob/master/leetcode.py\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">reference</a></h3>\n<ul>\n<li>tricky part when encountering pivot value <br/>\n<code class=\"language-text\">nums[left] &lt; pivot: left++</code> <br/>\n<code class=\"language-text\">nums[right] &gt; pivot: right--</code></li>\n<li>Avoid infinite loop: <br/>\nIf set &#x3C;= pivot or >= pivot, then when one part is always &#x3C;= pivot or >= pivot, divide and conquer will divide them into [nums] [] and cause inf loop</li>\n<li>Balance: <br/>\nCan swap left pivot and right pivot to balance the split, as the result, when <code class=\"language-text\">[pivot,  pivot ... pivot]</code>, it will be divided into two subarray and will not cause inf loop</li>\n<li>End status: <br/>\neach time it is done,\n<code class=\"language-text\">right | left</code>  or  <code class=\"language-text\">right | pivot | left</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">qsort</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># remains one element or empty</span>\n    <span class=\"token keyword\">if</span> start <span class=\"token operator\">>=</span> end<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span>\n        <span class=\"token comment\"># return nums[k], since partition finished</span>\n\n    pivot <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> end<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\n    left<span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> start<span class=\"token punctuation\">,</span> end\n    <span class=\"token keyword\">while</span> left <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> nums<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> pivot<span class=\"token punctuation\">:</span>\n            left <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">elif</span> nums<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> pivot<span class=\"token punctuation\">:</span>\n            right <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            nums<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span>\n            left <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            right <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token comment\"># qsort                           # ... right | left ... or ... right == left ...</span>\n    self<span class=\"token punctuation\">.</span>qsort<span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> left <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#  left - 1 |</span>\n    self<span class=\"token punctuation\">.</span>qsort<span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span>       <span class=\"token comment\">#           |  left</span>\n\n    <span class=\"token comment\"># qselect kth idx</span>\n    <span class=\"token keyword\">if</span> k <span class=\"token operator\">&lt;</span> left<span class=\"token punctuation\">:</span> <span class=\"token comment\"># k in left part</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>qselect<span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> left <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># k in right part</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>qselect<span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"cylic-sort\" style=\"position:relative;\"><a href=\"#cylic-sort\" aria-label=\"cylic sort permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cylic sort</h3>\n<ul>\n<li>complexity: O(N)</li>\n<li>\n<p>in-place sort</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">cyclic_sort</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"binary-search\" style=\"position:relative;\"><a href=\"#binary-search\" aria-label=\"binary search permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Binary Search</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">binary_search</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> nums<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\n  start<span class=\"token punctuation\">,</span> end <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n\n  <span class=\"token keyword\">while</span> start <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> end<span class=\"token punctuation\">:</span>\n    mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> end<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n\n    <span class=\"token comment\"># start | target | mid  | end</span>\n    <span class=\"token comment\"># start | end (target)</span>\n    <span class=\"token comment\"># corner case: start(target) | end</span>\n    <span class=\"token keyword\">if</span> nums<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> target<span class=\"token punctuation\">:</span>\n      start <span class=\"token operator\">=</span> mid\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n      end <span class=\"token operator\">=</span> mid\n\n  <span class=\"token keyword\">if</span> nums<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> target<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> start\n  <span class=\"token keyword\">elif</span> nums<span class=\"token punctuation\">[</span>end<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> target<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> end\n  <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></code></pre></div>\n<h3 id=\"linked-list\" style=\"position:relative;\"><a href=\"#linked-list\" aria-label=\"linked list permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Linked List</h3>\n<ul>\n<li>slow and fast ptrs</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># prev = None</span>\n\nslow <span class=\"token operator\">=</span> fast <span class=\"token operator\">=</span> head\n\n<span class=\"token keyword\">while</span> fast <span class=\"token keyword\">and</span> fast<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># prev = slow -> to get he previous node of slow, then set peve.next = None</span>\n  slow <span class=\"token operator\">=</span> slow<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n  fast <span class=\"token operator\">=</span> fast<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n\n<span class=\"token comment\"># 1 -> 2 -> 2 -> 1 -> null</span>\n<span class=\"token comment\">#           ^          ^</span>\n<span class=\"token comment\">#          slow       fast</span>\n<span class=\"token comment\"># slow will stop at the next node of the middle one</span>\n\n<span class=\"token comment\"># 1 -> 2 -> 3 -> 2 -> 1</span>\n<span class=\"token comment\">#           ^         ^</span>\n<span class=\"token comment\">#         slow      fast</span>\n<span class=\"token comment\"># slow will stop at the middle one</span></code></pre></div>\n<ul>\n<li>reverse Linked List</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># recursive</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># handle last node and empty list</span>\n  <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> head <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> head<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> head\n\n  new_head <span class=\"token operator\">=</span> reverse<span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># reverse</span>\n  head<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> head<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n  head<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n\n  <span class=\"token keyword\">return</span> new_head\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  prev <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n  curr <span class=\"token operator\">=</span> head\n  <span class=\"token keyword\">while</span> curr<span class=\"token punctuation\">:</span>\n      nextTemp <span class=\"token operator\">=</span> curr<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n      curr<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> prev\n      prev <span class=\"token operator\">=</span> curr\n      curr <span class=\"token operator\">=</span> nextTemp\n\n  <span class=\"token keyword\">return</span> prev</code></pre></div>\n<h3 id=\"dynamic-programming\" style=\"position:relative;\"><a href=\"#dynamic-programming\" aria-label=\"dynamic programming permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dynamic Programming</h3>\n<p>計數型\n最大最小\n存在型</p>\n<h3 id=\"確定狀態\" style=\"position:relative;\"><a href=\"#%E7%A2%BA%E5%AE%9A%E7%8B%80%E6%85%8B\" aria-label=\"確定狀態 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>確定狀態</h3>\n<p>透過最後一步 將原問題轉成子問題\nO(N) 都為最優\nO(N) = O(N-1) + 最後一步</p>\n<h3 id=\"轉移方程\" style=\"position:relative;\"><a href=\"#%E8%BD%89%E7%A7%BB%E6%96%B9%E7%A8%8B\" aria-label=\"轉移方程 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>轉移方程</h3>\n<p>先看初始條件，與邊界條件\n初始條件: 用轉移方程算不出來</p>\n<p>序列性 前 i 個 最小 可行性</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>piles<span class=\"token punctuation\">)</span>\ndp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> n <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># pick i to i</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> piles<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> l <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># l can be 2...n</span>\n    <span class=\"token comment\"># start + l &lt;= n</span>\n    <span class=\"token comment\"># start = 0, l = n, end = start + l - 1 (n-1)</span>\n    <span class=\"token keyword\">for</span> start <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span>l<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        end <span class=\"token operator\">=</span> start <span class=\"token operator\">+</span> l <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n        dp<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>end<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>piles<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> dp<span class=\"token punctuation\">[</span>start<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>end<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> piles<span class=\"token punctuation\">[</span>end<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> dp<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>end<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span></code></pre></div>\n<h3 id=\"lru-cache\" style=\"position:relative;\"><a href=\"#lru-cache\" aria-label=\"lru cache permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LRU Cache</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> val<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">next</span><span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>key <span class=\"token operator\">=</span> key\n        self<span class=\"token punctuation\">.</span>val <span class=\"token operator\">=</span> val\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LRUCache</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> capacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token triple-quoted-string string\">\"\"\"\n      :type capacity: int\n      \"\"\"</span>\n      self<span class=\"token punctuation\">.</span>pos <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n      self<span class=\"token punctuation\">.</span>dummy <span class=\"token operator\">=</span> ListNode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      self<span class=\"token punctuation\">.</span>tail <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>dummy\n      self<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> capacity\n\n  <span class=\"token keyword\">def</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      self<span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>tail\n      self<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> node\n      self<span class=\"token punctuation\">.</span>tail <span class=\"token operator\">=</span> node\n\n  <span class=\"token keyword\">def</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      prev <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>\n      <span class=\"token keyword\">del</span> self<span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>\n\n      <span class=\"token keyword\">if</span> prev<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">:</span>\n          self<span class=\"token punctuation\">.</span>tail <span class=\"token operator\">=</span> prev\n      <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n          prev<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> prev<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n          <span class=\"token comment\"># move back pos of next node of removed node</span>\n          self<span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">[</span>prev<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> prev\n\n  <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token triple-quoted-string string\">\"\"\"\n      :type key: int\n      :rtype: int\n      \"\"\"</span>\n      <span class=\"token keyword\">if</span> key <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">:</span>\n          <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\n      value <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">.</span>val\n      self<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n      self<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ListNode<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">.</span>val\n\n  <span class=\"token keyword\">def</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token triple-quoted-string string\">\"\"\"\n      :type key: int\n      :type value: int\n      :rtype: void\n      \"\"\"</span>\n      <span class=\"token keyword\">if</span> key <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">:</span>\n          self<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n          self<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ListNode<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n          self<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ListNode<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>capacity<span class=\"token punctuation\">:</span>\n              self<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>dummy<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span></code></pre></div>\n<h1 id=\"sliding-window\" style=\"position:relative;\"><a href=\"#sliding-window\" aria-label=\"sliding window permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sliding window</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">''' Use right - left + 1 to calculate number for atMost K\n[1, 2, 1, 2, 3]\n1\n\n12\n 2\n\n121\n 21\n  1\n\n1212\n 212\n  12\n   2\n\n   23\n    3\n'''</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">atMost</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  window <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  left <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n  count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n  <span class=\"token comment\"># index left and right are both in the window</span>\n  <span class=\"token comment\"># element in window s[left:right+1]</span>\n  <span class=\"token comment\"># right == 0, means 1 element in the window</span>\n  <span class=\"token keyword\">for</span> right <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> k <span class=\"token keyword\">and</span> s<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> window <span class=\"token keyword\">and</span> left <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">:</span>\n          window<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n\n          <span class=\"token keyword\">if</span> window<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n              <span class=\"token keyword\">del</span> window<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\n          left <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n      <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> window<span class=\"token punctuation\">:</span>\n          window<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n      window<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n      count <span class=\"token operator\">+=</span> right <span class=\"token operator\">-</span> left <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n      <span class=\"token comment\"># max_len = max(max_len, right - left + 1) find the longest window</span>\n\n  <span class=\"token keyword\">return</span> count</code></pre></div>\n<h3 id=\"prefix-sum\" style=\"position:relative;\"><a href=\"#prefix-sum\" aria-label=\"prefix sum permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prefix Sum</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span> target <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token comment\">#Count 滿足 sum = k 的subarray, k = 3</span></code></pre></div>\n<p>首先 需要一個累積總和 (rolling sum) 去確認到當下index的所有數字總和<br/>\n如果能在過去的累積總和當中找到 累積總和 - 目標值k的差值 (意即過去某一index的累積總和) <br/>\n則我們知道 <code class=\"language-text\">過去某一段區間的累積總和 + 隨意一段總和為k的區間 = 在當下的累積總和</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">當我們在 index <span class=\"token number\">3</span> 的時候，累積總和為<span class=\"token number\">7</span>\n我們知道\n<span class=\"token comment\"># { 1: 1 }</span>\n<span class=\"token comment\"># { 4: 1 }</span>\n<span class=\"token comment\"># { 5: 1 }</span>\n<span class=\"token comment\"># { 7: 1 }</span></code></pre></div>\n<p>累積總和 <code class=\"language-text\">7</code> - 目標值 <code class=\"language-text\">3</code> = 4</p>\n<p>過去某一段區間的累積總和 4 (1,3 的累積總和)\n隨意一段總和為k的區間 (此處為 1,2)\n回推我們知道在 index 1 時，累積總和 <code class=\"language-text\">4</code> - 目標值 <code class=\"language-text\">3</code> = <code class=\"language-text\">1</code> 也存在，故在 index 3 之前有兩組滿足目標</p>\n<p>我們稱過去一段的累積總和為 Prefix Sum</br></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Sum of subarray(i, j) = PrefixSum[j] - PrefixSum[i]</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">rabinKarp</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> L <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span>\n\n    memo <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>defaultdict<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>\n    d<span class=\"token punctuation\">,</span> prime <span class=\"token operator\">=</span> <span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">31</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n    remove <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    window <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n\n    <span class=\"token comment\"># => d ** L-1 + d ** L-2 + .... d** 0</span>\n    <span class=\"token comment\"># => length is L</span>\n    <span class=\"token keyword\">for</span> right <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>L<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        remove <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>remove <span class=\"token operator\">*</span> d<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> prime\n        window <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>window <span class=\"token operator\">*</span> d <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> prime\n\n    left <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token comment\"># start with L-1 means L element in the window</span>\n    <span class=\"token keyword\">for</span> right <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>L<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> right <span class=\"token operator\">==</span> L<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            window <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>window <span class=\"token operator\">*</span> d <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> prime\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            window <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>d <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>window <span class=\"token operator\">-</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> remove<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> prime\n            left <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> memo<span class=\"token punctuation\">[</span>window<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># window is the rolling_hash</span>\n            <span class=\"token comment\"># left and right are in window</span>\n            <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">:</span>right<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> s<span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span>L<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">:</span>right<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n        memo<span class=\"token punctuation\">[</span>window<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">rolling_hash</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n  memo <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>defaultdict<span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">)</span>\n  d<span class=\"token punctuation\">,</span> prime <span class=\"token operator\">=</span> <span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">31</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n  remove <span class=\"token operator\">=</span> d <span class=\"token operator\">**</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  left<span class=\"token punctuation\">,</span> window <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span>\n\n  <span class=\"token keyword\">for</span> right <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">if</span> right <span class=\"token operator\">-</span> left <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">></span> size<span class=\"token punctuation\">:</span>\n          window <span class=\"token operator\">-=</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> remove\n          left <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n      window <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>window <span class=\"token operator\">*</span> d <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> prime\n\n      <span class=\"token keyword\">if</span> right <span class=\"token operator\">-</span> left <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> size<span class=\"token punctuation\">:</span>\n          <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">:</span>right<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> memo<span class=\"token punctuation\">[</span>window<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n              count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n              memo<span class=\"token punctuation\">[</span>window<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">:</span>right<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> count</code></pre></div>","frontmatter":{"title":"Python","date":"2020-11-19","description":null,"socialImage":null}}},"pageContext":{"slug":"/notes/leetcode"}},"staticQueryHashes":["251939775","401334301","4017299803","825871152"]}