{"componentChunkName":"component---src-templates-note-template-js","path":"/notes/tocken-bucket","result":{"data":{"markdownRemark":{"id":"b64c588d-a4eb-5f2f-be06-9df3075254a6","html":"<p>Credit to: <a href=\"https://code.activestate.com/recipes/511490-implementation-of-the-token-bucket-algorithm/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Link</a></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> time\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TokenBucket</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token triple-quoted-string string\">\"\"\"An implementation of the token bucket algorithm.\n\n  >>> bucket = TokenBucket(80, 0.5)\n  >>> print bucket.consume(10)\n  True\n  >>> print bucket.consume(90)\n  False\n  \"\"\"</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> tokens<span class=\"token punctuation\">,</span> fill_rate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token triple-quoted-string string\">\"\"\"tokens is the total tokens in the bucket. fill_rate is the\n      rate in tokens/second that the bucket will be refilled.\"\"\"</span>\n      self<span class=\"token punctuation\">.</span>capacity <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>tokens<span class=\"token punctuation\">)</span>\n      self<span class=\"token punctuation\">.</span>_tokens <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>tokens<span class=\"token punctuation\">)</span>\n      self<span class=\"token punctuation\">.</span>fill_rate <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>fill_rate<span class=\"token punctuation\">)</span>\n      self<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">=</span> time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token function\">consume</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> tokens<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token triple-quoted-string string\">\"\"\"Consume tokens from the bucket. Returns True if there were\n      sufficient tokens otherwise False.\"\"\"</span>\n      <span class=\"token keyword\">if</span> tokens <span class=\"token operator\">&lt;=</span> self<span class=\"token punctuation\">.</span>tokens<span class=\"token punctuation\">:</span>\n          self<span class=\"token punctuation\">.</span>_tokens <span class=\"token operator\">-=</span> tokens\n      <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n          <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token function\">get_tokens</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>_tokens <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>capacity<span class=\"token punctuation\">:</span>\n          now <span class=\"token operator\">=</span> time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          delta <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>fill_rate <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>now <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span>\n          self<span class=\"token punctuation\">.</span>_tokens <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>capacity<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>_tokens <span class=\"token operator\">+</span> delta<span class=\"token punctuation\">)</span>\n          self<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">=</span> now\n      <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_tokens\n  tokens <span class=\"token operator\">=</span> <span class=\"token builtin\">property</span><span class=\"token punctuation\">(</span>get_tokens<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n  bucket <span class=\"token operator\">=</span> TokenBucket<span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">print</span> <span class=\"token string\">\"tokens =\"</span><span class=\"token punctuation\">,</span> bucket<span class=\"token punctuation\">.</span>tokens\n  <span class=\"token keyword\">print</span> <span class=\"token string\">\"consume(10) =\"</span><span class=\"token punctuation\">,</span> bucket<span class=\"token punctuation\">.</span>consume<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">print</span> <span class=\"token string\">\"consume(10) =\"</span><span class=\"token punctuation\">,</span> bucket<span class=\"token punctuation\">.</span>consume<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n  sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">print</span> <span class=\"token string\">\"tokens =\"</span><span class=\"token punctuation\">,</span> bucket<span class=\"token punctuation\">.</span>tokens\n  sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">print</span> <span class=\"token string\">\"tokens =\"</span><span class=\"token punctuation\">,</span> bucket<span class=\"token punctuation\">.</span>tokens\n  <span class=\"token keyword\">print</span> <span class=\"token string\">\"consume(90) =\"</span><span class=\"token punctuation\">,</span> bucket<span class=\"token punctuation\">.</span>consume<span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">print</span> <span class=\"token string\">\"tokens =\"</span><span class=\"token punctuation\">,</span> bucket<span class=\"token punctuation\">.</span>tokens</code></pre></div>","frontmatter":{"title":"Token Bucket","date":"2020-07-26","description":null,"socialImage":null}}},"pageContext":{"slug":"/notes/tocken-bucket"}},"staticQueryHashes":["251939775","401334301","4017299803","825871152"]}